# Generated by Django 5.2.4 on 2025-07-07 11:11

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('store', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.CharField(choices=[('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('paypal', 'PayPal'), ('bank_transfer', 'Bank Transfer')], default='credit_card', max_length=20)),
                ('is_default', models.BooleanField(default=False)),
                ('card_type', models.CharField(blank=True, choices=[('visa', 'Visa'), ('mastercard', 'MasterCard'), ('amex', 'American Express'), ('discover', 'Discover'), ('other', 'Other')], max_length=20, null=True)),
                ('last_four', models.CharField(blank=True, max_length=4, null=True)),
                ('expiry_month', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('expiry_year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('billing_name', models.CharField(blank=True, max_length=100)),
                ('billing_email', models.EmailField(blank=True, max_length=254)),
                ('billing_phone', models.CharField(blank=True, max_length=20)),
                ('billing_address', models.TextField(blank=True)),
                ('payment_gateway_id', models.CharField(blank=True, max_length=100)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_methods', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Payment Method',
                'verbose_name_plural': 'Payment Methods',
                'ordering': ['-is_default', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RefundRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('processed', 'Processed')], default='pending', max_length=20)),
                ('reason', models.CharField(choices=[('not_satisfied', 'Not satisfied with the product'), ('not_as_described', 'Product not as described'), ('technical_issues', 'Technical issues'), ('duplicate_purchase', 'Duplicate purchase'), ('other', 'Other')], default='other', max_length=50)),
                ('reason_details', models.TextField(blank=True)),
                ('amount_requested', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('amount_approved', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('admin_notes', models.TextField(blank=True)),
                ('refunded_at', models.DateTimeField(blank=True, null=True)),
                ('refund_reference', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refund_requests', to='store.order')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refund_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Refund Request',
                'verbose_name_plural': 'Refund Requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('transaction_type', models.CharField(choices=[('purchase', 'Purchase'), ('refund', 'Refund'), ('withdrawal', 'Instructor Withdrawal'), ('payout', 'Instructor Payout'), ('adjustment', 'Manual Adjustment')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('gateway_transaction_id', models.CharField(blank=True, max_length=100)),
                ('gateway_response', models.JSONField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transactions', to='store.order')),
                ('payment_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='store.paymentmethod')),
                ('refund_request', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transaction', to='store.refundrequest')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['transaction_id'], name='store_trans_transac_c3d1ce_idx'), models.Index(fields=['user', 'transaction_type'], name='store_trans_user_id_af47a1_idx'), models.Index(fields=['status', 'created_at'], name='store_trans_status_793fc6_idx')],
            },
        ),
    ]
