"""
Django settings for LMS project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
from datetime import timedelta
import os 
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-%9l()dc43djrz=dnah3&#5vxtc7#z2fmh=e$-7m)r*(_svbc2n'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost', '127.0.0.1']

SITE_ID = 1

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    # 'allauth.account.auth_backends.AuthenticationBackend',  # Temporarily disabled for testing
]

# Axes configuration
# AXES_ENABLED = True
# AXES_FAILURE_LIMIT = 5  # Number of failed login attempts before lockout
# AXES_COOLOFF_TIME = 1  # 1 hour lockout after too many failed attempts
# AXES_LOCKOUT_TEMPLATE = 'account/lockout.html'  # Create this template
# AXES_RESET_ON_SUCCESS = True


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    
    # Third party apps
    'rest_framework',
    'rest_framework_simplejwt',
    'corsheaders',
    # 'ckeditor',  # Replaced with django-ckeditor-5 due to security issues
    'django_ckeditor_5',
    # 'ckeditor_uploader',  # Temporarily disabled
    'django_filters',
    # 'drf_spectacular',  # Temporarily disabled
    # 'oauth2_provider',  # Temporarily disabled
    # 'django_extensions',  # Temporarily disabled
    # 'axes',  # Temporarily disabled
    # 'silk',  # Temporarily disabled
    
    # Original apps
    'user_agents',
    # 'axes',
    # 'silk',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.github',
    # 'menu_generator',
    
    # Core LMS apps
    # website  # Removed - converted to APIs
    
    # New API apps
    'users',
    'courses',
    'content',
    'store',
    'reviews',
    'assignments',
    'certificates',
    'meetings',
    'notifications',
    'articles',
    'extras',
    'custom_permissions',
]

# Moyasar settings (use environment variables in production)
# MOYASAR_SETTINGS = {
#     # Test keys by default; override with env vars in production
#     'PUBLISHABLE_KEY': os.getenv('MOYASAR_PUBLISHABLE_KEY', 'pk_test_6Rn9APYpUxc1t7YZD2Mr9BuoUYGFtZNJKx5Yu8KM'),
#     'SECRET_KEY': os.getenv('MOYASAR_SECRET_KEY', 'sk_test_jfeqPR4F9Xz2DLaq4p4etDkZLKWB81HHkT4HeB3Q'),
#     'API_BASE_URL': os.getenv('MOYASAR_API_BASE_URL', 'https://api.moyasar.com/v1'),
#     'CURRENCY': os.getenv('MOYASAR_CURRENCY', 'SAR'),
#     # Public base URL for callbacks (set your domain in production)
#     'PUBLIC_BASE_URL': os.getenv('PUBLIC_BASE_URL', 'http://127.0.0.1:8000'),
# }

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    # 'oauth2_provider.middleware.OAuth2TokenMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'axes.middleware.AxesMiddleware',
    # 'lms_core.middleware.AdminMiddleware',  # Temporarily disabled
    'allauth.account.middleware.AccountMiddleware',
    # 'silk.middleware.SilkyMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.request',  # django-allauth
                # 'website.context_processors.categories_processor',  # Removed with website
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators



AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'ar'

TIME_ZONE = 'Asia/Riyadh'

USE_I18N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = '/static/'
MEDIA_URL = '/media/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # Added for production

# CKEDITOR_UPLOAD_PATH = 'uploads/'  # Old CKEditor 4 setting

# CKEditor 5 Configuration
customColorPalette = [
    {"color": "000000", "label": "Black"},
    {"color": "4D4D4D", "label": "Gray"},
    {"color": "999999", "label": "Light Gray"},
    {"color": "E6E6E6", "label": "White"},
    {"color": "4A90E2", "label": "Blue"},
    {"color": "50E3C2", "label": "Green"},
    {"color": "B8E986", "label": "Light Green"},
    {"color": "F5A623", "label": "Orange"},
    {"color": "D0021B", "label": "Red"},
    {"color": "9013FE", "label": "Purple"},
    {"color": "8B572A", "label": "Brown"},
    {"color": "FFFFFF", "label": "White"},
]

# CKEditor 5 File Upload Settings
CKEDITOR_5_FILE_STORAGE = "django.core.files.storage.FileSystemStorage"
CKEDITOR_5_UPLOAD_PATH = "uploads/ckeditor5/"
CKEDITOR_5_CUSTOM_CSS = None

CKEDITOR_5_CONFIGS = {
    'default': {
        'toolbar': ['heading', '|', 'bold', 'italic', 'link',
                   'bulletedList', 'numberedList', 'blockQuote', 'imageUpload', ],

    },
    'extends': {
        'blockToolbar': [
            'paragraph', 'heading1', 'heading2', 'heading3',
            '|',
            'bulletedList', 'numberedList',
            '|',
            'blockQuote',
        ],
        'toolbar': ['heading', '|', 'outdent', 'indent', '|', 'bold', 'italic', 'backColor', 'underline',
                   'strikethrough', 'code', 'subscript', 'superscript', 'removeFormat',
                   '|', 'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor', '|',
                   'link', 'image', 'video', 'table', '|', 'alignment', '|', 'horizontalLine',
                   '|', 'pageBreak', '|', 'textPartLanguage', '|', 'sourceEditing'],
        'image': {
            'toolbar': ['imageTextAlternative', '|', 'imageStyle:alignLeft',
                       'imageStyle:alignRight', 'imageStyle:alignCenter', 'imageStyle:side', '|'],
            'styles': [
                'full',
                'side',
                'alignLeft',
                'alignRight',
                'alignCenter',
            ]

        },
        'table': {
            'contentToolbar': ['tableColumn', 'tableRow', 'mergeTableCells',
                              'tableProperties', 'tableCellProperties'],
            'tableProperties': {
                'borderColors': customColorPalette,
                'backgroundColors': customColorPalette
            },
            'tableCellProperties': {
                'borderColors': customColorPalette,
                'backgroundColors': customColorPalette
            }
        },
        'heading': {
            'options': [
                {'model': 'paragraph', 'title': 'Paragraph', 'class': 'ck-heading_paragraph'},
                {'model': 'heading1', 'view': 'h1', 'title': 'Heading 1', 'class': 'ck-heading_heading1'},
                {'model': 'heading2', 'view': 'h2', 'title': 'Heading 2', 'class': 'ck-heading_heading2'},
                {'model': 'heading3', 'view': 'h3', 'title': 'Heading 3', 'class': 'ck-heading_heading3'}
            ]
        }
    }
}



# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'APP': {
            'client_id': '123',
            'secret': '456',
            'key': ''
        }
    },
    'github': {
        'APP': {
            'client_id': 'ce523861bd1218f092a9',
            'secret': '6633db61a108505fdf303106f835acbc57a79fc1',
            'key': ''
        }
    }
}

# Django REST Framework settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        # 'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ],
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.SearchFilter',
        'rest_framework.filters.OrderingFilter',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 20,
    # 'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
}

# JWT Settings
from datetime import timedelta
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=30),  # Extended access token lifetime
    'REFRESH_TOKEN_LIFETIME': timedelta(days=60),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': True,
    'UPDATE_LAST_LOGIN': False,
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,
    'JWK_URL': None,
    'LEEWAY': 0,
    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
    'USER_AUTHENTICATION_RULE': 'rest_framework_simplejwt.authentication.default_user_authentication_rule',
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
    'TOKEN_USER_CLASS': 'rest_framework_simplejwt.models.TokenUser',
    'JTI_CLAIM': 'jti',
    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    'SLIDING_TOKEN_LIFETIME': timedelta(minutes=5),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),
}

# CORS settings
CORS_ALLOW_ALL_ORIGINS = True  # For development only
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",  # Default Next.js development server
    "http://127.0.0.1:3000",
    "http://localhost:8080",
    "http://127.0.0.1:8080",
    "http://localhost:5173",  # Vite development server
    "http://127.0.0.1:5173",
]
CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
]

# CSRF settings
CSRF_TRUSTED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
    "http://localhost:8080",
    "http://127.0.0.1:8080",
    "http://localhost:5173",
    "http://127.0.0.1:5173",
]

# Session settings for CSRF
SESSION_COOKIE_SAMESITE = 'Lax'
SESSION_COOKIE_HTTPONLY = True
SESSION_COOKIE_SECURE = False  # Set to True in production with HTTPS
CSRF_COOKIE_SAMESITE = 'Lax'
CSRF_COOKIE_HTTPONLY = False  # Allow JavaScript to read the CSRF token
CSRF_COOKIE_SECURE = False  # Set to True in production with HTTPS

# API Documentation
SPECTACULAR_SETTINGS = {
    'TITLE': 'LMS API',
    'DESCRIPTION': 'Learning Management System API',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
}

# Upload limits (tunable)
# Max module file size in MB (used by content.models.validate_file_size)
MAX_MODULE_FILE_MB = 300

# If you plan to upload big files via Django, consider increasing in-memory/body limits
# 1GB example; tune as needed
DATA_UPLOAD_MAX_MEMORY_SIZE = 1024 * 1024 * 1024
FILE_UPLOAD_MAX_MEMORY_SIZE = 1024 * 1024 * 1024

# OAuth2 Settings
OAUTH2_PROVIDER = {
    'SCOPES': {
        'read': 'Read scope',
        'write': 'Write scope',
    },
    'ACCESS_TOKEN_EXPIRE_SECONDS': 3600,
    'REFRESH_TOKEN_EXPIRE_SECONDS': 3600 * 24 * 7,
}

# Optional: Customize the login URL used by Django Axes
# LOGIN_URL = 'user/login/'  # Replace 'your_login_url' with your actual login URL

# settings.py
# AXES_ONLY_USER_FAILURES = False  # Track failed login attempts per IP or per user
# AXES_VERBOSE = False  # Whether to log blocked login attempts
# AXES_FAILURE_LIMIT = 5  # Maximum failed login attempts allowed
# AXES_LOCK_OUT_AT_FAILURE = True  # Lock out IPs after exceeding the failure limit
# AXES_COOLOFF_TIME = timedelta(minutes=10)  # Time duration for which an IP is locked out

DEBUG_TOOLBAR_CONFIG = {
    'SHOW_TOOLBAR_CALLBACK': lambda request: True,
}

# Django Admin Configuration
ADMIN_SITE_HEADER = "نظام إدارة التعلم - LMS"
ADMIN_SITE_TITLE = "LMS Admin"
ADMIN_INDEX_TITLE = "لوحة التحكم الرئيسية"

# Admin Panel Settings
ADMIN_REORDER = (
    # Core Django Apps
    {'app': 'auth', 'label': 'المصادقة والتخويل', 'models': (
        'auth.User',
        'auth.Group',
    )},
    
    # Users Management
    {'app': 'users', 'label': 'إدارة المستخدمين', 'models': (
        'users.Profile',
        'users.Instructor',
        'users.Student',
        'users.Organization',
        'users.InstructorApplication',
    )},
    
    # Courses Management
    {'app': 'courses', 'label': 'إدارة الدورات', 'models': (
        'courses.Category',
        'courses.Course',
        'courses.Module',
        'courses.Enrollment',
        'courses.CourseReview',
        'courses.UserProgress',
        'courses.Cart',
        'courses.CartItem',
    )},
    
    # Assignments & Exams
    {'app': 'assignments', 'label': 'الواجبات والامتحانات', 'models': (
        'assignments.Quiz',
        'assignments.Question',
        'assignments.QuizAttempt',
        'assignments.Exam',
        'assignments.ExamQuestion',
        'assignments.UserExamAttempt',
        'assignments.Assignment',
        'assignments.AssignmentSubmission',
    )},
    
    # Meetings
    {'app': 'meetings', 'label': 'الاجتماعات', 'models': (
        'meetings.Meeting',
        'meetings.Participant',
        'meetings.Notification',
        'meetings.MeetingChat',
        'meetings.Notification',
        'meetings.MeetingChat',
    )},
    
    # Certificates
    {'app': 'certificates', 'label': 'الشهادات', 'models': (
        'certificates.Certificate',
        'certificates.CertificateTemplate',
        'certificates.PresetCertificateTemplate',
        'certificates.UserSignature',
    )},
    {'app': 'articles', 'label': 'المقالات', 'models': (
        'articles.Article',
        'articles.ArticleComment',
        'articles.Book',
        'articles.BookCategory',
    )},
    {'app': 'notifications', 'label': 'الإشعارات', 'models': (
        'notifications.Notification',
        'notifications.NotificationPreference',
    )},
    {'app': 'store', 'label': 'المتجر', 'models': (
        'store.Product',
        'store.Order',
        'store.OrderItem',
        'store.Payment',
    )},
    {'app': 'reviews', 'label': 'التقييمات', 'models': (
        'reviews.Review',
        'reviews.Rating',
    )},
    {'app': 'extras', 'label': 'إضافات', 'models': (
        'extras.Banner',
        'extras.CourseCollection',
    )},
)
