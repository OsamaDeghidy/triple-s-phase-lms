# Generated by Django 5.2.1 on 2025-06-27 19:35

import ckeditor.fields
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, unique=True)),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('image', models.ImageField(blank=True, null=True, upload_to='categories/', verbose_name='Image')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Order')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('slug', models.SlugField(blank=True, max_length=100, null=True, unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='Untitled Course', max_length=200, null=True, verbose_name='Title')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True, unique=True, verbose_name='Slug')),
                ('subtitle', models.CharField(blank=True, max_length=255, null=True, verbose_name='Subtitle')),
                ('description', ckeditor.fields.RichTextField(verbose_name='Description')),
                ('short_description', models.TextField(blank=True, null=True, verbose_name='Short Description')),
                ('image', models.ImageField(blank=True, null=True, upload_to='courses/images/', verbose_name='Course Image')),
                ('promotional_video', models.URLField(blank=True, null=True, verbose_name='Promotional Video URL')),
                ('syllabus_pdf', models.FileField(blank=True, help_text='Upload course syllabus PDF', null=True, upload_to='courses/syllabus/', verbose_name='Syllabus PDF')),
                ('materials_pdf', models.FileField(blank=True, help_text='Upload additional course materials PDF', null=True, upload_to='courses/materials/', verbose_name='Course Materials')),
                ('level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], default='beginner', max_length=20, verbose_name='Difficulty Level')),
                ('language', models.CharField(default='en', max_length=50, verbose_name='Language')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Price')),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Discount Price')),
                ('is_free', models.BooleanField(default=False, verbose_name='Is Free')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending_review', 'Pending Review'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=20, verbose_name='Status')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Is Featured')),
                ('is_certified', models.BooleanField(default=False, verbose_name='Offers Certificate')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='Published At')),
                ('average_rating', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)], verbose_name='Average Rating')),
                ('total_enrollments', models.PositiveIntegerField(default=0, verbose_name='Total Enrollments')),
                ('meta_title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Meta Title')),
                ('meta_description', models.TextField(blank=True, null=True, verbose_name='Meta Description')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses', to='courses.category', verbose_name='Category')),
                ('instructors', models.ManyToManyField(related_name='courses_taught', to='users.Instructor', verbose_name='Instructors')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses', to='users.organization', verbose_name='Organization')),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
                'ordering': ['-created_at'],
                'permissions': [('can_publish_course', 'Can publish course'), ('can_edit_all_courses', 'Can edit all courses'), ('can_view_analytics', 'Can view course analytics')],
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('active', 'Active'), ('completed', 'Completed'), ('dropped', 'Dropped'), ('suspended', 'Suspended')], default='active', max_length=20, verbose_name='Status')),
                ('enrollment_date', models.DateTimeField(auto_now_add=True, verbose_name='Enrollment Date')),
                ('completion_date', models.DateTimeField(blank=True, null=True, verbose_name='Completion Date')),
                ('last_accessed', models.DateTimeField(auto_now=True, verbose_name='Last Accessed')),
                ('progress', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Progress %')),
                ('is_paid', models.BooleanField(default=False, verbose_name='Is Paid')),
                ('payment_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Payment Amount')),
                ('payment_date', models.DateTimeField(blank=True, null=True, verbose_name='Payment Date')),
                ('transaction_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Transaction ID')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='courses.course', verbose_name='Course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_enrollments', to=settings.AUTH_USER_MODEL, verbose_name='Student')),
            ],
            options={
                'verbose_name': 'Enrollment',
                'verbose_name_plural': 'Enrollments',
                'ordering': ['-enrollment_date'],
                'unique_together': {('student', 'course')},
            },
        ),
        migrations.AddField(
            model_name='course',
            name='students',
            field=models.ManyToManyField(related_name='enrolled_courses', through='courses.Enrollment', to=settings.AUTH_USER_MODEL, verbose_name='Students'),
        ),
        migrations.AddField(
            model_name='course',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='courses', to='courses.tag', verbose_name='Tags'),
        ),
    ]
