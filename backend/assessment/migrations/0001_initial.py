# Generated by Django 4.2.15 on 2025-09-10 06:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('courses', '0005_subcategory_course_subcategory'),
    ]

    operations = [
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('type', models.CharField(choices=[('assignment', 'Assignment'), ('quiz', 'Quiz'), ('exam', 'Exam'), ('flashcard', 'Flashcard')], max_length=20, verbose_name='Assessment Type')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=20, verbose_name='Status')),
                ('start_date', models.DateTimeField(verbose_name='Start Date')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='End Date')),
                ('duration_minutes', models.PositiveIntegerField(blank=True, help_text='Leave empty for no time limit', null=True, verbose_name='Duration (minutes)')),
                ('total_marks', models.DecimalField(decimal_places=2, default=100.0, max_digits=8, verbose_name='Total Marks')),
                ('passing_marks', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Passing Marks')),
                ('is_randomized', models.BooleanField(default=False, verbose_name='Randomize Questions')),
                ('allow_multiple_attempts', models.BooleanField(default=False, verbose_name='Allow Multiple Attempts')),
                ('max_attempts', models.PositiveIntegerField(default=1, help_text='Maximum number of attempts allowed (0 = unlimited)', verbose_name='Max Attempts')),
                ('show_correct_answers', models.BooleanField(default=True, verbose_name='Show Correct Answers')),
                ('show_results_immediately', models.BooleanField(default=True, verbose_name='Show Results Immediately')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='courses.course', verbose_name='Course')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_assessments', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'Assessment',
                'verbose_name_plural': 'Assessments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='QuestionBank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField(verbose_name='Question Text')),
                ('question_type', models.CharField(choices=[('mcq', 'Multiple Choice Question'), ('true_false', 'True/False'), ('short_answer', 'Short Answer'), ('essay', 'Essay'), ('fill_blank', 'Fill in the Blank'), ('matching', 'Matching'), ('ordering', 'Ordering')], max_length=20, verbose_name='Question Type')),
                ('difficulty_level', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], default='medium', max_length=10, verbose_name='Difficulty Level')),
                ('options', models.JSONField(blank=True, help_text='JSON array of options for MCQ questions', null=True, verbose_name='Options')),
                ('correct_answer', models.TextField(verbose_name='Correct Answer')),
                ('explanation', models.TextField(blank=True, null=True, verbose_name='Explanation')),
                ('tags', models.JSONField(blank=True, default=list, help_text='JSON array of tags for categorization', verbose_name='Tags')),
                ('image', models.ImageField(blank=True, null=True, upload_to='questions/images/', verbose_name='Question Image')),
                ('audio', models.FileField(blank=True, null=True, upload_to='questions/audio/', verbose_name='Question Audio')),
                ('video', models.FileField(blank=True, null=True, upload_to='questions/video/', verbose_name='Question Video')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_questions', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Question Bank',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StudentSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('in_progress', 'In Progress'), ('submitted', 'Submitted'), ('graded', 'Graded'), ('late', 'Late Submission')], default='in_progress', max_length=20, verbose_name='Status')),
                ('attempt_number', models.PositiveIntegerField(default=1, verbose_name='Attempt Number')),
                ('started_at', models.DateTimeField(auto_now_add=True, verbose_name='Started At')),
                ('submitted_at', models.DateTimeField(blank=True, null=True, verbose_name='Submitted At')),
                ('time_taken_minutes', models.PositiveIntegerField(blank=True, null=True, verbose_name='Time Taken (minutes)')),
                ('total_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Total Score')),
                ('percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='Percentage')),
                ('is_passed', models.BooleanField(default=False, verbose_name='Passed')),
                ('graded_at', models.DateTimeField(blank=True, null=True, verbose_name='Graded At')),
                ('feedback', models.TextField(blank=True, null=True, verbose_name='Feedback')),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='assessment.assessment', verbose_name='Assessment')),
                ('graded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='graded_submissions', to=settings.AUTH_USER_MODEL, verbose_name='Graded By')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessment_submissions', to=settings.AUTH_USER_MODEL, verbose_name='Student')),
            ],
            options={
                'verbose_name': 'Student Submission',
                'verbose_name_plural': 'Student Submissions',
                'ordering': ['-submitted_at', '-started_at'],
                'unique_together': {('student', 'assessment', 'attempt_number')},
            },
        ),
        migrations.CreateModel(
            name='Flashcard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('front_text', models.TextField(verbose_name='Front Text')),
                ('back_text', models.TextField(verbose_name='Back Text')),
                ('front_image', models.ImageField(blank=True, null=True, upload_to='flashcards/front/', verbose_name='Front Image')),
                ('back_image', models.ImageField(blank=True, null=True, upload_to='flashcards/back/', verbose_name='Back Image')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_flashcards', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('related_question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='flashcards', to='assessment.questionbank', verbose_name='Related Question')),
            ],
            options={
                'verbose_name': 'Flashcard',
                'verbose_name_plural': 'Flashcards',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StudentFlashcardProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('times_reviewed', models.PositiveIntegerField(default=0, verbose_name='Times Reviewed')),
                ('correct_count', models.PositiveIntegerField(default=0, verbose_name='Correct Count')),
                ('last_reviewed', models.DateTimeField(blank=True, null=True, verbose_name='Last Reviewed')),
                ('difficulty_level', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], default='medium', max_length=10, verbose_name='Difficulty Level')),
                ('flashcard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_progress', to='assessment.flashcard', verbose_name='Flashcard')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flashcard_progress', to=settings.AUTH_USER_MODEL, verbose_name='Student')),
            ],
            options={
                'verbose_name': 'Student Flashcard Progress',
                'verbose_name_plural': 'Student Flashcard Progress',
                'unique_together': {('student', 'flashcard')},
            },
        ),
        migrations.CreateModel(
            name='StudentAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', models.TextField(blank=True, null=True, verbose_name='Answer Text')),
                ('selected_options', models.JSONField(blank=True, help_text='For MCQ questions - array of selected option indices', null=True, verbose_name='Selected Options')),
                ('is_correct', models.BooleanField(default=False, verbose_name='Is Correct')),
                ('marks_obtained', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Marks Obtained')),
                ('is_auto_graded', models.BooleanField(default=False, verbose_name='Auto Graded')),
                ('answered_at', models.DateTimeField(auto_now_add=True, verbose_name='Answered At')),
                ('time_spent_seconds', models.PositiveIntegerField(blank=True, null=True, verbose_name='Time Spent (seconds)')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_answers', to='assessment.questionbank', verbose_name='Question')),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='assessment.studentsubmission', verbose_name='Submission')),
            ],
            options={
                'verbose_name': 'Student Answer',
                'verbose_name_plural': 'Student Answers',
                'ordering': ['answered_at'],
                'unique_together': {('submission', 'question')},
            },
        ),
        migrations.CreateModel(
            name='AssessmentQuestions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks_allocated', models.DecimalField(decimal_places=2, default=1.0, max_digits=8, verbose_name='Marks Allocated')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Order')),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessment_questions', to='assessment.assessment', verbose_name='Assessment')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessment_questions', to='assessment.questionbank', verbose_name='Question')),
            ],
            options={
                'verbose_name': 'Assessment Question',
                'verbose_name_plural': 'Assessment Questions',
                'ordering': ['order', 'id'],
                'unique_together': {('assessment', 'question')},
            },
        ),
    ]
